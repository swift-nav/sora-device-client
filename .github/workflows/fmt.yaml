name: Code Formatting and Linting
on:
  push:

env:
  #https://github.com/python-poetry/poetry/issues/5250
  PYTHON_KEYRING_BACKEND: keyring.backends.fail.Keyring

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: pip install poetry
    - uses: actions/setup-python@v3
      with:
        python-version: '3.9'
        cache: 'poetry'
    - uses: bufbuild/buf-setup-action@v1
      env:
        BUF_TOKEN: ${{ secrets.BUF_TOKEN }}
      with:
        github_token: ${{ github.token }}

    - run: make lint

  pip-install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    - run: pip install poetry
    - uses: actions/setup-python@v3
      with:
        python-version: '${{ matrix.python_version }}'
        cache: 'poetry'
    - uses: bufbuild/buf-setup-action@v1
      env:
        BUF_TOKEN: ${{ secrets.BUF_TOKEN }}
      with:
        github_token: ${{ github.token }}

    - run: make sora
    - run: pip install .
    - run: sora --version

  # if we link against a GPL dep we can't licence as MIT
  license-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - run: pip install poetry
    - uses: actions/setup-python@v3
      with:
        python-version: 3.11
        cache: 'poetry'
    - uses: bufbuild/buf-setup-action@v1
      env:
        BUF_TOKEN: ${{ secrets.BUF_TOKEN }}
      with:
        github_token: ${{ github.token }}
    - run: |
        make sora
        poetry install
    - name: check we have no GPL dependencies
      run: |
        pip install pip-licenses
        pip-licenses --fail-on GPL
      shell: poetry run bash -e {0}

  wheel:
    runs-on: ubuntu-latest
    needs:
      - lint
      - pip-install
    steps:
    - uses: actions/checkout@v3
    - run: pip install poetry
    - uses: actions/setup-python@v3
      with:
        python-version: '3.9'
        cache: 'poetry'
    - uses: bufbuild/buf-setup-action@v1
      env:
        BUF_TOKEN: ${{ secrets.BUF_TOKEN }}
      with:
        github_token: ${{ github.token }}

    - run: |
        poetry version $(poetry version -s)+$(git branch --show-current | tr -d '+~/ ')-$(git rev-parse --short HEAD)
    - run: make wheel

    - uses: actions/upload-artifact@v3
      with:
        name: sora.whl
        path: |
          dist/*.whl
